2 + 2
5 * 9
exp(2)
exp(1)
log(exp(1))
sin(pi / 2)
1:10
1:100
5:8
seq(1, 10)
seq(1, 10, by = 0.1)
?seq
?c
c(1, 2, 3)
c(4, 9, 10)
seq(1, 10, by = 0.1)
list(10, 20, 30)
list(10:20, 1:10, 0:5)
list(a = 10:20, b = 1:10, c = 0:5)
myvariable <- list(a = 10:20, b = 1:10, c = 0:5)
myvariable
myvariable$a
myvariable$c
a[[1]]
myvariable[[1]]
myvariable[1]
T
F
c(T, F)
c(T, 1)
names(myvariable)
names(myvariable
)
names(myvariable
matrix(1:9, nrow = 3)
?matrix
matrix(1:9, nrow = 3, byrow = T)
A <- matrix(1:9, nrow = 3, byrow = T)
c(1, 2, 3) * 5
c(1, 2, 3) + 10
c(1, 2, 3) * c(4, 5, 6)
c(1, 2, 3, 4, 5) + c(10, 20)
names("myvariable")
names(myvariable)
names(myvariable)[1]
names(myvariable)[1] <- "hi"
names(myvariable)
myvariable[1]
names(myvariable[1])
names(myvariable[1]) <- "hello"
names(myvariable[1])
names(myvariable)[2]
a
a
A
View(A)
A * c(1, 1, 1)
A * c(10, 10, 10)
A %*% c(10, 10, 1)
A
c(1, 2, 3) %*% c(1, 2, 3)
sum(c(1, 2, 3) * c(1, 2, 3))
A[1]
A[1,]
A[,1]
A[ 1, 1 ]
A[1,1] <- 10
A
A[c(1, 2), ]
A[c(1, 2), c(2, 3)]
length(1:10)
1:10
length(1:10)
nrow(A)
ncol(A)
x <- 4
if(x < 5) {print("X is small")}
if(x < 5) {print("X is small")} else {print("X is not small")}
x <- 6
if(x < 5) {print("X is small")} else {print("X is not small")}
x <- c(1, 2, 6)
x <54
x < 5
ifelse(x < 5, 1, -1)
ifelse(x < 5, "VALUE IS TRUE", 0)
limit <- 10
i <- 0
for(counter in 1:10) {
print(counter)
}
limit <- 10
i <- 0
while(i < limit) {
print("increment me!")
i <- i + 1
}
square.me <- function(x) {
squared.value <- x * x
squared.value
}
square.me(2)
square.me(10)
square.me.more.values <- function(x) {}
square.me.more.values <- function(x) {
list(x, x * x)
}
square.me.more.values(30)
?function
??function
x <- 1:10
sapply(x, square.me)
sapply(x, function(x) {45 * x^2 - x / 2})
getwd()
setwd("..")
getwd()
list.files()
dir()
setwd("~/")
read.csv("NYPD_Motor_Vehicle_Collisions.csv")
read.csv("data.csv")
?read.csv
read.csv("data.csv")
read.csv("data.csv", sep = ";")
read.csv("data.csv", sep = "")
read.csv("data.csv", sep = "\t")
a <- read.csv("data.csv", sep = "\t")
a
data.frame(x = c(1,2 ,3), y = c(1, 4, 5))
z <- data.frame(x = c(1,2 ,3), y = c(1, 4, 5))
z$x
z$y
as.matrix(z)
read.csv("data.csv", sep = "\t")
rnorm(1)
rnorm(10)
rnorm(10, mean = 0, sd = 20)
rpois(10, lambda = 20)
runif(10)
data.frame(x = rnorm(20), y = rpois(20))
data.frame(x = rnorm(20), y = rpois(20, lambda = 5))
data <- data.frame(x = rnorm(20), y = rpois(20, lambda = 5))
index <- 1:nrow(data)
runif(length(index))
runif(length(index)) < 5
runif(length(index)) < 0.5
runif(length(index)) < 0.2
in.test.set <- runif(length(index)) < 0.2
data[in.test.set, ]
data[!in.test.set, ]
runif(10, min = 0, max = 100)
source('~/hi.R')
source("hi.R")
x <- 1:10
y <- x * 5 + 3 + rnorm(length(x))
plot(x, y)
title("Hello")
ylabel("My Y Label")
ylab("My Y Label")
?title
?plot
plot(x, y, title = "My Title", xlab = "Hello", ylab = "Goodbyhe")
line(x, y)
plot(x, y, type = "l")
plot(x, y, type = "b")
abline(a = -10, b = 3)
?abline
x <- seq(0, 10, by = 0.1)
y <- seq(0, 10, by = 0.1)
plot(x, y, type = "l")
y <- seq(0, 10, by = 0.01)
x <- seq(0, 10, by = 0.01)
plot(x, y, type = "l")
xlim(0, 5)
plot(x, y, type = "l", xlim = c(0, 5))
install.packages("ggplot2")
library(ggplot2)
x
y
x <- 0:20
y <- x * 45 + 3
y <- x * 45 + 3 + rnorm(length(x))
data <- data.frame(x = x, y = y)
data <- data.frame(a = x, b = y)
data
ggplot(data, aes(x = a, y = b))
ggplot(data, aes(x = a, y = b)) + geom_point()
ggplot(data, aes(x = a, y = b)) + geom_point() + geom_line()
ggplot(data, aes(x = a, y = b)) + geom_point() + geom_line(color  = "pink")
ggplot(data, aes(x = a, y = b)) + geom_point(color = "green") + geom_line(color  = "pink")
ggplot(data, aes(x = a, y = b)) + geom_point(color = "green") + geom_line(color  = "pink") + ggtitle("Hi There") + xlab("X Label") + ylab("Y Label")
ggplot(data, aes(x = a, y = b)) + geom_point(color = "green") + geom_line(color  = "pink") + ggtitle("Hi There") + xlab("X Label") + ylab("Y Label") + xim(-, 10)
ggplot(data, aes(x = a, y = b)) + geom_point(color = "green") + geom_line(color  = "pink") + ggtitle("Hi There") + xlab("X Label") + ylab("Y Label") + xlim(0, 10)
ggplot(data, aes(x = a, y = b)) + geom_point(color = "green") + geom_line(color  = "pink") + ggtitle("Hi There") + xlab("X Label") + ylab("Y Label") + coord_cartesian(xlim = c(0, 10))
ggplot(data, aes(x = a, y = b)) + geom_point(color = "green") + geom_line(color  = "pink") + ggtitle("Hi There") + xlab("X Label") + ylab("Y Label") + coord_cartesian(xlim = c(0, 10)) + geom_abline(slope = -10, intercept = 400)
ggplot(data, aes(x = a, y = b)) + geom_point(color = "green") + geom_line(color  = "pink") + ggtitle("Hi There") + xlab("X Label") + ylab("Y Label") + coord_cartesian(xlim = c(0, 10)) + geom_abline(slope = -10, intercept = 400) + geom_abline(slope = 0, intercept = 30)
slopes <- rnorm(10)
intercepts <- rnorm(10)
d <- data.frame(s = slopes, i = intercepts)
d
plot <- ggplot()
for(i in 1:nrow(d)) {}
for(i in 1:nrow(d)) {plot <- plot + geom_abline(slope = slopes[i], intercept = intercepts[i])}
plot
plot + coord_cartesian(xlim = c(-5, 5), ylim = c(-5, 5))
ggsave("myplot.png")
ggplot() + geom_abline(slope = 5, intercept = 0, color = "blue")
colors <- c("blue", "red", "green")
savehistory("~/R Tutorial.Rhistory")
